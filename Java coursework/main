//main

package javaapplication27;

import java.awt.Color;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.JFrame;
import javax.swing.JPanel;

public class CW3 extends JPanel {

    public CW3() {
        Color c = new Color(190, 190, 190);
        setBackground(c);
    }

    @Override
    public void paint(Graphics g) {
        super.paint(g);
        g.drawLine(0, getHeight() * 4 / 23, getWidth(), getHeight() * 4 / 23);
        g.drawLine(0, getHeight() * 7 / 23, getWidth(), getHeight() * 7 / 23);
        g.drawLine(0, getHeight() * 10 / 23, getWidth(), getHeight() * 10 / 23);
        g.drawLine(0, getHeight() * 13 / 23, getWidth(), getHeight() * 13 / 23);
        g.drawLine(0, getHeight() * 16 / 23, getWidth(), getHeight() * 16 / 23);
        g.drawLine(0, getHeight() * 19 / 23, getWidth(), getHeight() * 19 / 23);
        g.drawLine(getWidth() * 1 / 4, getHeight() * 4 / 23, getWidth() * 1 / 4, getHeight() * 19 / 23);

        String str1 = "Wolf Number";
        Font font1 = new Font("", Font.BOLD, this.getWidth() / 35 + this.getHeight() / 35);
        g.setFont(font1);
        FontMetrics fm1 = g.getFontMetrics();
        int stringWidth1 = fm1.stringWidth(str1);
        int stringHeight1 = fm1.getDescent();
        g.drawString(str1, getWidth() / 2 - stringWidth1 / 2, getHeight() * 4 / 23 * 3 / 4 - stringHeight1);

        String str7 = "= 1000";
        Font font7 = new Font("", Font.BOLD, this.getWidth() / 35 + this.getHeight() / 40);
        g.setFont(font7);
        g.drawString(str7, getWidth() / 2, getHeight() * 22 / 23);

        String str8 = "Key:";
        Font font8 = new Font("", Font.BOLD, this.getWidth() / 35 + this.getHeight() / 40);
        g.setFont(font8);
        FontMetrics fm8 = g.getFontMetrics();
        g.drawString(str8, getWidth() * 12 / 40, getHeight() * 22 / 23);

        ArrayList<String> name = readfile("source/Number.csv");

        String str2 = name.get(0);
        Font font2 = new Font("", Font.BOLD, this.getWidth() / 65 + this.getHeight() / 65);
        g.setFont(font2);
        FontMetrics fm2 = g.getFontMetrics();
        int stringWidth2 = fm2.stringWidth(str2);
        g.drawString(str2, getWidth() / 16 - stringWidth2 / 2, getHeight() * 12 / 46);

        String str3 = name.get(1);
        Font font3 = new Font("", Font.BOLD, this.getWidth() / 65 + this.getHeight() / 65);
        g.setFont(font3);
        FontMetrics fm3 = g.getFontMetrics();
        int stringWidth3 = fm3.stringWidth(str3);
        g.drawString(str3, getWidth() / 16 - stringWidth3 / 2, getHeight() * 18 / 46);

        String str4 = name.get(2);
        Font font4 = new Font("", Font.BOLD, this.getWidth() / 65 + this.getHeight() / 65);
        g.setFont(font4);
        FontMetrics fm4 = g.getFontMetrics();
        int stringWidth4 = fm4.stringWidth(str4);
        g.drawString(str4, getWidth() / 16 - stringWidth4 / 2, getHeight() * 24 / 46);

        String str5 = name.get(3);
        Font font5 = new Font("", Font.BOLD, this.getWidth() / 65 + this.getHeight() / 65);
        g.setFont(font5);
        FontMetrics fm5 = g.getFontMetrics();
        int stringWidth5 = fm5.stringWidth(str5);
        g.drawString(str5, getWidth() / 16 - stringWidth5 / 2, getHeight() * 30 / 46);

        String str6 = name.get(4);
        Font font6 = new Font("", Font.BOLD, this.getWidth() / 65 + this.getHeight() / 65);
        g.setFont(font6);
        FontMetrics fm6 = g.getFontMetrics();
        int stringWidth6 = fm6.stringWidth(str6);
        g.drawString(str6, getWidth() / 16 - stringWidth6 / 2, getHeight() * 36 / 46);

        BufferedImage image5 = readImage("source/AOHU.png");
        g.drawImage(image5, getWidth() / 2 - stringWidth1 / 4, getHeight() * 18 / 20 - stringHeight1, this.getWidth() / 16, this.getHeight() / 10, this);

        ArrayList<Integer> amount = readfile0("source/Number.csv");

        for (int i = 0; i < amount.get(0) / 1000; i++) {
            g.drawImage(image5, getWidth() * 21 / 80 + this.getWidth() / 14 * i, getHeight() * 12 / 46 - this.getHeight() / 15, this.getWidth() / 16, this.getHeight() / 10, this);
        }

        for (int i = 0; i < amount.get(1) / 1000; i++) {
            g.drawImage(image5, getWidth() * 21 / 80 + this.getWidth() / 14 * i, getHeight() * 18 / 46 - this.getHeight() / 15, this.getWidth() / 16, this.getHeight() / 10, this);
        }

        for (int i = 0; i <= amount.get(2) / 1000; i++) {
            g.drawImage(image5, getWidth() * 21 / 80 + this.getWidth() / 14 * i, getHeight() * 24 / 46 - this.getHeight() / 15, this.getWidth() / 16, this.getHeight() / 10, this);
        }
        Color d = new Color(190, 190, 190);
        g.setColor(d);
        g.fillRect(getWidth() * 21 / 80 + this.getWidth() / 14 * amount.get(2) / 1000, getHeight() * 24 / 46 - this.getHeight() / 15, this.getWidth() / 16, this.getHeight() / 10);

        for (int i = 0; i <= amount.get(3) / 1000; i++) {
            g.drawImage(image5, getWidth() * 21 / 80 + this.getWidth() / 14 * i, getHeight() * 30 / 46 - this.getHeight() / 15, this.getWidth() / 16, this.getHeight() / 10, this);
        }
        Color e = new Color(190, 190, 190);
        g.setColor(e);
        g.fillRect(getWidth() * 21 / 80 + this.getWidth() / 14 * amount.get(3) / 1000, getHeight() * 30 / 46 - this.getHeight() / 15, this.getWidth() / 16, this.getHeight() / 10);

        for (int i = 0; i < amount.get(4) / 1000; i++) {
            g.drawImage(image5, getWidth() * 21 / 80 + this.getWidth() / 14 * i, getHeight() * 36 / 46 - this.getHeight() / 15, this.getWidth() / 16, this.getHeight() / 10, this);
        }

        //China
        BufferedImage image1 = readImage("source/china.jpg");
        g.drawImage(image1, getWidth() / 8, getHeight() * 11 / 46 - this.getHeight() * 1 / 20, this.getWidth() * 3 / 30, this.getHeight() * 2 / 20, this);

        //America
        BufferedImage image2 = readImage("source/america.jpg");
        g.drawImage(image2, getWidth() / 8, getHeight() * 17 / 46 - this.getHeight() * 1 / 20, this.getWidth() * 3 / 30, this.getHeight() * 2 / 20, this);

        //India
        BufferedImage image3 = readImage("source/india.jpg");
        g.drawImage(image3, getWidth() / 8, getHeight() * 23 / 46 - this.getHeight() * 1 / 20, this.getWidth() * 3 / 30, this.getHeight() * 2 / 20, this);

        //Romaria
        BufferedImage image4 = readImage("source/romaria.jpg");
        g.drawImage(image4, getWidth() / 8, getHeight() * 29 / 46 - this.getHeight() * 1 / 20, this.getWidth() * 3 / 30, this.getHeight() * 2 / 20, this);

        //Russia
        BufferedImage image6 = readImage("source/russia.jpg");
        g.drawImage(image6, getWidth() / 8, getHeight() * 35 / 46 - this.getHeight() * 1 / 20, this.getWidth() * 3 / 30, this.getHeight() * 2 / 20, this);

    }

    public BufferedImage readImage(String filepath) {
        BufferedImage read = null;
        try {
            read = ImageIO.read(new File(filepath));

        } catch (IOException e) {

        }
        return read;
    }

    public static ArrayList readfile0(String filepath) {
        Path path = Paths.get(filepath);
        ArrayList<Integer> amount = new ArrayList();
        try {
            BufferedReader reader = Files.newBufferedReader(path);

            String line;
            while ((line = reader.readLine()) != null) {
                String item[] = line.split(",");
                int number = Integer.valueOf(item[1]);
                amount.add(number);
            }
        } catch (Exception e) {

        }
        return amount;
    }

    public static ArrayList readfile(String filepath) {
        Path path = Paths.get(filepath);
        ArrayList<String> list = new ArrayList();
        try {
            BufferedReader reader = Files.newBufferedReader(path);
            String line;
            while ((line = reader.readLine()) != null) {
                String item[] = line.split(",");
                String name = item[0];
                list.add(name);
            }
        } catch (Exception e) {

        }
        return list;
    }

    public static void main(String[] args) {
        JFrame frame = new JFrame();
        CW3 jpanel = new CW3();
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(700, 500);
        frame.setTitle("Animals");
        frame.add(jpanel);
        frame.setVisible(true);

    }

}


