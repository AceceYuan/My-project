//lab 5


package lab5;

/**
 *
 * @author Ace
 */
public class Homework {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        drawTree(8);
    }
    
    public static void drawTree(int size){
        // The i loop will do each line
        for(int i = 1; i<=size; i++){
            for(int m = size-i; m>0;m--){
                System.out.print(" ");
            }
            // the jth loop will start from i and count down
            for (int j = i; j > 0; j--) {
                System.out.print(j);
            }
            // the kth loop will start from i and count up
            for(int k = 2; k<=i; k++){
                System.out.print(k);
            }
            System.out.println("");
        }
            
            
    }
    
}



//Stock


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lab5;

/**
 *
 * @author Ace
 */
public class Lab5 {

    public static void main(String[] args) {
        StockPrice sp1 = new StockPrice("AAPL", "2006-12-1", 91.8, 92.33, 90.1, 91.32, 28395700);
        StockPrice sp2 = new StockPrice("AAPL", "2006-12-4", 91.88, 92.05, 90.5, 91.12, 25340600);
        StockPrice sp3 = new StockPrice("AAPL", "2006-12-5", 91.655, 92.33, 90.87, 91.27, 23672800);

        // Display Spread
        // double sp1Spr = sp1.getSpread();
        System.out.println("");
        // System.out.println("Spread is " + sp1Spr);

        //Array of Stock Prices
        StockPrice[] prices = new StockPrice[3];
        prices[0] = sp1;
        prices[1] = sp2;
        prices[2] = sp3;

        for (int i = 0; i < prices.length; i++) {
            //  System.out.println("Stockprice Ticker is " + prices[i].getTicker());
            //  System.out.println("  -- Opening price is " + prices[i].getOpen());
            //  System.out.println("  -- Closing price is " + prices[i].getClose());
            // System.out.println("Stockprice Ticker is " + prices[i].toString());
        }

        // call method to calculate lowest opening price
        //calcClosing(prices);
       // StockPrice comp1 = new StockPrice("AAPL", "2006-12-4", 91.88, 92.05, 90.5, 91.12, 25340600);
        StockPrice comp1 = new StockPrice("AAPL", "2006-12-8", 81.655, 82.33, 80.87, 91.27, 23672800);
        boolean match = false;
        int matchLoc = 0;
        for (int i = 0; i < prices.length; i++) {
            if (comp1.equals(prices[i])) {
                match = true;
                matchLoc = i;
            }
        }
        if(match==true){
            System.out.println("Match is true, matches with " +prices[matchLoc].toString());
        }
        else {
            System.out.println("No match found");
        }
        
        
        //StockPrice comp2 = new StockPrice("AAPL", "2006-12-8", 81.655, 82.33, 80.87, 91.27, 23672800);

    }

    // Calculate lowest opening price method
    public static void calcClosing(StockPrice[] prices) {
        // Initial value
        double lowest = prices[0].getOpen();

        // Loop through array
        for (int i = 0; i < prices.length; i++) {
            // Check if value is lower than lowest
            if (prices[i].getLow() < lowest) {
                // if it is, set
                lowest = prices[i].getOpen();
            }
        }
        System.out.println("");
        System.out.println("Lowest opening price is: " + lowest);
    }

}



//Stockprice


package lab5;

public class StockPrice {
    // Instance variables
    private String ticker;
    private String date;
    private double open, high, low, close;
    private long volume;

// Constructor
    public StockPrice(String ticker, String date, double open,
            double high, double low,
            double close, long volume) {
        // assign variables
        this.ticker = ticker;
        this.date = date;
        this.open = open;
        this.high = high;
        this.low = low;
        this.close = close;
        this.volume = volume;

        // System.out
        System.out.println("Stock " + ticker + " " + date + " created.");
    }

    // Getters
    public String getTicker() {
        return ticker;
    }

    public String getDate() {
        return date;
    }

    public double getOpen() {
        return open;
    }

    public double getHigh() {
        return high;
    }

    public double getLow() {
        return low;
    }

    public double getClose() {
        return close;
    }

    public long getVolume() {
        return volume;
    }
    // spread method
    public double getSpread(){
        return high - low;
    }

    public String toString(){
        return "Stock: ticker= " + ticker + " , date= " + date +
                " , opening price= " + open + " , closing price= " + close +
                " , high= " + high + " , low= " + low +
                " , volume= " + volume;
    }


    public boolean equals(StockPrice other){
        if(!this.ticker.equals(other.getTicker())){
            return false;
        }
        if(!this.date.equals(other.getDate())){
            return false;
        }
        if(this.open != other.getOpen()){
            return false;
        }
        if(this.high != other.getHigh()){
            return false;
        }
        if(this.low != other.getLow()){
            return false;
        }
        if(this.close != other.getClose()){
            return false;
        }
        if(this.volume != other.getVolume()){
            return false;
        }
        return true;
    }

}
